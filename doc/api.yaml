openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
  /user:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request.
      tags:
        - User
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      tags:
        - User
  '/user/{id}':
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found.
      tags:
        - User
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Not Found.
      tags:
        - User
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '404':
          description: Not Found.
      tags:
        - User
  /artist:
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '400':
          description: Bad Request.
      tags:
        - Artist
    get:
      operationId: ArtistController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Artist'
      tags:
        - Artist
  '/artist/{id}':
    get:
      operationId: ArtistController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '404':
          description: Not Found.
      tags:
        - Artist
    put:
      operationId: ArtistController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '403':
          description: Forbidden.
        '404':
          description: Not Found.
      tags:
        - Artist
    delete:
      operationId: ArtistController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '404':
          description: Not Found.
      tags:
        - Artist
  /album:
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '400':
          description: Bad Request.
      tags:
        - Album
    get:
      operationId: AlbumController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Album'
      tags:
        - Album
  '/album/{id}':
    get:
      operationId: AlbumController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '404':
          description: Not Found.
      tags:
        - Album
    put:
      operationId: AlbumController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '403':
          description: Forbidden.
        '404':
          description: Not Found.
      tags:
        - Album
    delete:
      operationId: AlbumController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
        '404':
          description: Not Found.
      tags:
        - Album
  /track:
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '400':
          description: Bad Request.
      tags:
        - Track
    get:
      operationId: TrackController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Track'
      tags:
        - Track
  '/track/{id}':
    get:
      operationId: TrackController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '404':
          description: Not Found.
      tags:
        - Track
    put:
      operationId: TrackController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '403':
          description: Forbidden.
        '404':
          description: Not Found.
      tags:
        - Track
    delete:
      operationId: TrackController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '404':
          description: Not Found.
      tags:
        - Track
  /favs:
    get:
      operationId: FavoriteController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Response'
      tags:
        - Favorits
  '/favs/track/{id}':
    post:
      operationId: FavoriteController_createTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Track'
        '422':
          description: Unprocessable.
      tags:
        - Favorits
    delete:
      operationId: FavoriteController_deleteTrack
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '404':
          description: Not Found.
      tags:
        - Favorits
  '/favs/album/{id}':
    post:
      operationId: FavoriteController_createAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Album'
        '422':
          description: Unprocessable.
      tags:
        - Favorits
    delete:
      operationId: FavoriteController_deleteAlbum
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '404':
          description: Not Found.
      tags:
        - Favorits
  '/favs/artist/{id}':
    post:
      operationId: FavoriteController_createArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artist'
        '422':
          description: Unprocessable.
      tags:
        - Favorits
    delete:
      operationId: FavoriteController_deleteArtist
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '404':
          description: Not Found.
      tags:
        - Favorits
info:
  title: Rest Service
  description: Rest Service API description
  version: '1.0'
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    bearer:
      scheme: bearer
      bearerFormat: JWT
      type: http
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
        password:
          type: string
          format: password
          pattern: ^[a-zA-Z0-9]{3,30}
      required:
        - login
        - password
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        login:
          type: string
        version:
          type: number
        createdAt:
          type: number
        updatedAt:
          type: number
      required:
        - id
        - login
        - version
        - createdAt
        - updatedAt
    UpdateUserDto:
      type: object
      properties:
        oldPassword:
          type: string
          format: password
          pattern: ^[a-zA-Z0-9]{3,30}
        newPassword:
          type: string
          format: password
          pattern: ^[a-zA-Z0-9]{3,30}
      required:
        - oldPassword
        - newPassword
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
        grammy:
          type: boolean
      required:
        - name
        - grammy
    Artist:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        grammy:
          type: boolean
      required:
        - id
        - name
        - grammy
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
          format: uuid
      required:
        - name
        - year
        - artistId
    Album:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        year:
          type: number
        artistId:
          type: string
      required:
        - id
        - name
        - year
        - artistId
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
        artistId:
          type: string
          format: uuid
        albumId:
          type: string
        duration:
          type: number
      required:
        - name
        - artistId
        - albumId
        - duration
    Track:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        artistId:
          type: string
          format: uuid
        albumId:
          type: string
          format: uuid
        duration:
          type: number
      required:
        - id
        - name
        - artistId
        - albumId
        - duration
    Response:
      type: object
      properties:
        artists:
          type: array
          items:
            type: string
        albums:
          type: array
          items:
            type: string
        tracks:
          type: array
          items:
            type: string
      required:
        - artists
        - albums
        - tracks
